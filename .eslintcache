[{"/home/neronexius/Programming/projects/planthenextday/client/src/index.js":"1","/home/neronexius/Programming/projects/planthenextday/client/src/reportWebVitals.js":"2","/home/neronexius/Programming/projects/planthenextday/client/src/App.js":"3","/home/neronexius/Programming/projects/planthenextday/client/src/component/auth/Login.jsx":"4","/home/neronexius/Programming/projects/planthenextday/client/src/component/Ui/Home.jsx":"5","/home/neronexius/Programming/projects/planthenextday/client/src/component/auth/Register.jsx":"6","/home/neronexius/Programming/projects/planSuccess/MERN_LocalAuthentication_Template/client/src/index.js":"7","/home/neronexius/Programming/projects/planSuccess/MERN_LocalAuthentication_Template/client/src/App.js":"8","/home/neronexius/Programming/projects/planSuccess/MERN_LocalAuthentication_Template/client/src/reportWebVitals.js":"9","/home/neronexius/Programming/projects/planSuccess/MERN_LocalAuthentication_Template/client/src/component/Ui/Home.jsx":"10","/home/neronexius/Programming/projects/planSuccess/MERN_LocalAuthentication_Template/client/src/component/auth/Register.jsx":"11","/home/neronexius/Programming/projects/planSuccess/MERN_LocalAuthentication_Template/client/src/component/auth/Login.jsx":"12","/home/neronexius/Programming/projects/planSuccess/MERN_LocalAuthentication_Template/client/src/component/Ui/DragNDrop.jsx":"13"},{"size":500,"mtime":1609505944737,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1609505944740,"results":"16","hashOfConfig":"15"},{"size":609,"mtime":1609507044931,"results":"17","hashOfConfig":"15"},{"size":1638,"mtime":1609506836617,"results":"18","hashOfConfig":"15"},{"size":147,"mtime":1609506416552,"results":"19","hashOfConfig":"15"},{"size":1213,"mtime":1609507019696,"results":"20","hashOfConfig":"15"},{"size":523,"mtime":1609593868565,"results":"21","hashOfConfig":"22"},{"size":548,"mtime":1609742426362,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1609507511884,"results":"24","hashOfConfig":"22"},{"size":476,"mtime":1609746755006,"results":"25","hashOfConfig":"22"},{"size":1213,"mtime":1609507511882,"results":"26","hashOfConfig":"22"},{"size":1638,"mtime":1609507511882,"results":"27","hashOfConfig":"22"},{"size":2553,"mtime":1609747488665,"results":"28","hashOfConfig":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q8j5tl",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"111q5y5",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"/home/neronexius/Programming/projects/planthenextday/client/src/index.js",[],"/home/neronexius/Programming/projects/planthenextday/client/src/reportWebVitals.js",[],"/home/neronexius/Programming/projects/planthenextday/client/src/App.js",["59","60","61","62"],"/home/neronexius/Programming/projects/planthenextday/client/src/component/auth/Login.jsx",["63"],"/home/neronexius/Programming/projects/planthenextday/client/src/component/Ui/Home.jsx",[],"/home/neronexius/Programming/projects/planthenextday/client/src/component/auth/Register.jsx",["64"],"/home/neronexius/Programming/projects/planSuccess/MERN_LocalAuthentication_Template/client/src/index.js",[],["65","66"],"/home/neronexius/Programming/projects/planSuccess/MERN_LocalAuthentication_Template/client/src/App.js",[],"/home/neronexius/Programming/projects/planSuccess/MERN_LocalAuthentication_Template/client/src/reportWebVitals.js",[],"/home/neronexius/Programming/projects/planSuccess/MERN_LocalAuthentication_Template/client/src/component/Ui/Home.jsx",[],"/home/neronexius/Programming/projects/planSuccess/MERN_LocalAuthentication_Template/client/src/component/auth/Register.jsx",["67"],"\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Register() {\n    const [inputField, setInputField]=useState({})\n    let history = useHistory()\n    function inputHandler(e){\n        setInputField((input)=>({...input, [e.target.name]: e.target.value}))\n    }\n\n    async function register(){\n        try {\n            let result = await axios.post(\"http://localhost:80/auth/register\", inputField)\n            history.push('/login')\n        } catch (error) {\n            console.log(error)\n        }    \n    }\n    return (\n        <div>\n            <h1>Registeration page</h1>\n            <input\n                name=\"username\"\n                onChange={inputHandler}\n                type=\"text\"\n                autocomplete=\"off\"\n                required\n              />\n               <input\n                name=\"password\"\n                onChange={inputHandler}\n                type=\"password\"\n                autocomplete=\"off\"\n                required\n              />\n               <button className=\"login_button\" onClick={register}>\n                Register\n            </button>\n        </div>\n    )\n}\n\nexport default Register\n","/home/neronexius/Programming/projects/planSuccess/MERN_LocalAuthentication_Template/client/src/component/auth/Login.jsx",["68"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport {decode} from \"jsonwebtoken\"\nimport { useHistory } from \"react-router-dom\";\nfunction Login() {\n    let history = useHistory()\n    const [inputField, setInputField]=useState({})\n\n    function inputHandler(e){\n        setInputField((input)=>({...input, [e.target.name]: e.target.value}))\n    }\n\n    async function login() {\n        try {\n          let profile = await axios.post(\n            \"http://localhost:80/auth/login\",\n            inputField\n          );\n          localStorage.setItem(\"token\", profile.data.token);\n          // let decoded_user = await decode(profile.data.token);\n        //   let resData = await axios.get(`http://localhost:80/user/loginUser`, {\n        //     headers: {\n        //       Authorization: `Bearer ${profile.data.token}`,\n        //     },\n        //   });\n          console.log(\"logged in\")\n          history.push(`/home`);\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    return (\n        <div>\n            <h1>Log In page</h1>\n            <input\n                  name=\"username\"\n                  onChange={inputHandler}\n                  type=\"text\"\n                  autocomplete=\"off\"\n                  required\n            />\n            <input\n                  name=\"password\"\n                  onChange={inputHandler}\n                  type=\"password\"\n                  autocomplete=\"off\"\n                  required\n            />\n            <button className=\"login_button\" onClick={login}>\n                  Sign In\n              </button> \n        </div>\n    )\n}\n\nexport default Login\n","/home/neronexius/Programming/projects/planSuccess/MERN_LocalAuthentication_Template/client/src/component/Ui/DragNDrop.jsx",["69"],"import React,  {useState, useRef} from 'react'\n\n\nfunction DragNDrop({data}) {\n    const [list,setList] = useState(data)\n    const [dragging,setDragging] = useState(false);\n    \n    const dragItem = useRef()\n    const dragNode = useRef()\n\n    const handleDragStart = (e,params) =>{\n        dragItem.current = params\n        dragNode.current = e.target\n        dragNode.current.addEventListener('dragend',handleDragEnd)\n        setTimeout(()=>{\n            setDragging(true)\n        },0)\n    }\n    const handleDragEnd = () =>{\n        setDragging(false)\n        dragNode.current.removeEventListener('dragend',handleDragEnd)\n        dragNode.current = null;\n        dragItem.current = null;\n\n    }\n    const handleDragEnter = (e,params) =>{\n        console.log(\"Entering Drag...\", params)\n        const currentItem = dragItem.current;\n        if (e.target != dragNode.current){\n            setList(oldList => {\n                let newList = JSON.parse(JSON.stringify(oldList))\n                newList[params.grpI].items.splice(params.itemI,0,newList[currentItem.grpI].items.splice(currentItem.itemI,1)[0])\n                dragItem.current = params\n                return newList\n            })\n        }\n    }\n\n    const getStyles = (params) =>{\n        const currentItem = dragItem.current\n        if (currentItem.grpI === params.grpI && currentItem.itemI === params.itemI){\n            return \"dnd-item current\"\n        }\n        else{\n            return \"dnd-item\"\n        }\n    }\n    return (\n        <div className=\"drag-n-drop\">\n            {\n                list.map((grp,grpI)=>(\n                    <div\n                    key={grp.title} \n                    className=\"dnd-group\"\n                    onDragEnter={dragging && !grp.items.length ? (e)=> handleDragEnter(e,{grpI,itemI:0}):null}\n                    >\n                        <div className=\"group_title\">{grp.title}</div>\n                        {grp.items.map((item, itemI)=>(\n                            <div \n                            draggable \n                            onDragStart={(e) => {handleDragStart(e,{grpI,itemI})}} \n                            onDragEnter={dragging ? (e) => {handleDragEnter(e,{grpI,itemI})} : null}\n                            key={itemI} \n                            className={dragging ? getStyles({grpI, itemI}) : \"dnd-item\"}>\n                                {item}\n                            </div>\n                        ))}\n                    </div>\n                ))\n            }\n            </div>\n    )\n}\n\nexport default DragNDrop\n",{"ruleId":"70","severity":1,"message":"71","line":1,"column":8,"nodeType":"72","messageId":"73","endLine":1,"endColumn":12},{"ruleId":"70","severity":1,"message":"74","line":3,"column":49,"nodeType":"72","messageId":"73","endLine":3,"endColumn":56},{"ruleId":"70","severity":1,"message":"75","line":3,"column":58,"nodeType":"72","messageId":"73","endLine":3,"endColumn":68},{"ruleId":"70","severity":1,"message":"76","line":3,"column":70,"nodeType":"72","messageId":"73","endLine":3,"endColumn":78},{"ruleId":"70","severity":1,"message":"77","line":3,"column":9,"nodeType":"72","messageId":"73","endLine":3,"endColumn":15},{"ruleId":"70","severity":1,"message":"78","line":15,"column":17,"nodeType":"72","messageId":"73","endLine":15,"endColumn":23},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"70","severity":1,"message":"78","line":15,"column":17,"nodeType":"72","messageId":"73","endLine":15,"endColumn":23},{"ruleId":"70","severity":1,"message":"77","line":3,"column":9,"nodeType":"72","messageId":"73","endLine":3,"endColumn":15},{"ruleId":"83","severity":1,"message":"84","line":29,"column":22,"nodeType":"85","messageId":"86","endLine":29,"endColumn":24},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'useHistory' is defined but never used.","'Redirect' is defined but never used.","'decode' is defined but never used.","'result' is assigned a value but never used.","no-native-reassign",["87"],"no-negated-in-lhs",["88"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]